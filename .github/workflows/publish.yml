name: Release and Publish

on:
  push:
    branches: [ main ]
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  auto-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bump2version

    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Bump version
      id: version
      run: |
        # Get current version
        CURRENT_VERSION=$(grep "^current_version = " .bumpversion.cfg | sed 's/current_version = //')
        echo "Current version: $CURRENT_VERSION"
        
        # Bump patch version
        bump2version patch --verbose --allow-dirty
        
        # Get new version
        NEW_VERSION=$(grep "^current_version = " .bumpversion.cfg | sed 's/current_version = //')
        echo "New version: $NEW_VERSION"
        
        # Set outputs
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Commit version bump
      run: |
        git add .bumpversion.cfg pyproject.toml hq/__init__.py
        git commit -m "Bump version to ${{ steps.version.outputs.version }}"
        git tag ${{ steps.version.outputs.tag }}
        git push origin main
        git push origin ${{ steps.version.outputs.tag }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        release_name: Release ${{ steps.version.outputs.tag }}
        draft: false
        prerelease: false
        body: |
          Automated release ${{ steps.version.outputs.tag }}
          
          Changes in this release:
          - See commit history for details

  deploy:
    runs-on: ubuntu-latest
    needs: auto-release
    if: always() && (github.event_name == 'release' || needs.auto-release.result == 'success')
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ needs.auto-release.outputs.tag || github.ref }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
