name: Manual Version Bump

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

permissions:
  contents: write
  packages: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bump2version

    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Bump version
      id: version
      run: |
        # Get current version
        CURRENT_VERSION=$(grep "^current_version = " .bumpversion.cfg | sed 's/current_version = //')
        echo "Current version: $CURRENT_VERSION"
        
        # Bump version based on input
        bump2version ${{ github.event.inputs.version_type }} --verbose --allow-dirty
        
        # Get new version
        NEW_VERSION=$(grep "^current_version = " .bumpversion.cfg | sed 's/current_version = //')
        echo "New version: $NEW_VERSION"
        
        # Set outputs
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Commit version bump
      run: |
        git add .bumpversion.cfg pyproject.toml hq/__init__.py
        git commit -m "Bump ${{ github.event.inputs.version_type }} version to ${{ steps.version.outputs.version }}"
        
        # Check if tag already exists
        if git tag -l "${{ steps.version.outputs.tag }}" | grep -q "${{ steps.version.outputs.tag }}"; then
          echo "Tag ${{ steps.version.outputs.tag }} already exists, deleting it first"
          git tag -d "${{ steps.version.outputs.tag }}"
          git push origin :refs/tags/${{ steps.version.outputs.tag }} || true
        fi
        
        git tag ${{ steps.version.outputs.tag }}
        git push origin main
        git push origin ${{ steps.version.outputs.tag }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        release_name: Release ${{ steps.version.outputs.tag }}
        draft: false
        prerelease: false
        body: |
          Manual ${{ github.event.inputs.version_type }} version bump to ${{ steps.version.outputs.tag }}
          
          Changes in this release:
          - See commit history for details
